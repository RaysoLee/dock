# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD Workflow
on:
  workflow_dispatch:
    inputs:
      manual-run:
        description: '手动运行工作流'
        required: true
        default: 'true'
        
jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [18.20.0]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #   - name: Set up pnpm
  #     uses: pnpm/action-setup@v2
  #     with:
  #       version: '7.x'
  #   # Install dependencies using pnpm
  #   - name: Install dependencies
  #     run: pnpm install

  #   # Run build command (if any)
  #   - name: Run build
  #     env:
  #         COMPANY_NAME: ${{ secrets.COMPANY_NAME }}
  #         SITE_NAME: ${{ secrets.SITE_NAME }}
  #         SHOPIFY_REVALIDATION_SECRET: ${{ secrets.SHOPIFY_REVALIDATION_SECRET }}
  #         SHOPIFY_STOREFRONT_ACCESS_TOKEN: ${{ secrets.SHOPIFY_STOREFRONT_ACCESS_TOKEN }}
  #         SHOPIFY_STORE_DOMAIN: ${{ secrets.SHOPIFY_STORE_DOMAIN }}
  #     run: pnpm run build

    deploy:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Install Vercel CLI
          run: npm install -g vercel

        - name: Vercel deploy
          env:
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}  # 需要将 Vercel Token 存储在 GitHub Secrets 中
            # VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}  # 可选的项目 ID
            # VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}  # 可选的组织 ID
          run: |
            vercel --token $VERCEL_TOKEN --prod --confirm
